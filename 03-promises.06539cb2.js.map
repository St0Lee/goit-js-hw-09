{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbL,EAAKa,iBAAiB,UAetB,SAA0BC,GACxBA,EAAMC,iBAEN,MAAMC,EAAQC,SAASjB,EAAKkB,SAASb,MAAMc,OACrCC,EAAOH,SAASjB,EAAKkB,SAASE,KAAKD,OACnCE,EAASJ,SAASjB,EAAKkB,SAASG,OAAOF,OAE7C,IAAIG,EAAaN,EAEjB,IAAK,IAAIO,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCpB,EAAcoB,EAAGD,GAAYE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAC7CoB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IACvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MACpBoB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,IAEvEiB,GAAcF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', submitParameters)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nfunction submitParameters(event) {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value); // parsing it since everything in the form is a string\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  let delayValue = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayValue).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delayValue += step;\n  }\n};\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","elements","value","step","amount","delayValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.06539cb2.js.map"}